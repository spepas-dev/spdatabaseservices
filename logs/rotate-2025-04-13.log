{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"417","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":2355.06,"status":200,"url":"/spdatbaseservice/api/v1/invoice/add"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"417","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1808.078,"status":200,"url":"/spdatbaseservice/api/v1/invoice/add"}
{"clientVersion":"5.22.0","code":"P2003","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice_Item.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:530:56\n\n  527 ussd.addInvoiceItem = async (invoiceItem) => {\n  528     try {\n  529         \n→ 530         const newContinent = await prisma.invoice_Item.create(\nForeign key constraint violated: `Invoice_Item_invoice_id_fkey (index)`","meta":{"field_name":"Invoice_Item_invoice_id_fkey (index)","modelName":"Invoice_Item"},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.invoice_Item.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:530:56\n\n  527 ussd.addInvoiceItem = async (invoiceItem) => {\n  528     try {\n  529         \n→ 530         const newContinent = await prisma.invoice_Item.create(\nForeign key constraint violated: `Invoice_Item_invoice_id_fkey (index)`\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.addInvoiceItem (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:530:30)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:274:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice_Item.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:530:56\n\n  527 ussd.addInvoiceItem = async (invoiceItem) => {\n  528     try {\n  529         \n→ 530         const newContinent = await prisma.invoice_Item.create(\nForeign key constraint violated: `Invoice_Item_invoice_id_fkey (index)`"}
{"content_length":"422","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1724.617,"status":500,"url":"/spdatbaseservice/api/v1/invoice/add-item"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"411","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1621.24,"status":200,"url":"/spdatbaseservice/api/v1/invoice/add-item"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:262:43\n\n  259 \n  260 ussd.PendingInvoiceForGopa = async () => {\n  261     try {\n→ 262         const user = await prisma.invoice.findMany({\n                where: {\n                  status: 0,\n                  aggregate: 1\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        bid: {\n                        ~~~\n                          include: {\n                            seller: true,\n                            images: true,\n                            gopa: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            assigner: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            orderRequest: {\n                              include: {\n                                requester: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                creater: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                sparePart: {\n                                  include: {\n                                    images: true,\n                                    carModel: {\n                                      include: {\n                                        carBrand: {\n                                          include: {\n                                            manufacturer: true\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n              ?         where?: CartWhereInput\n                      }\n                    }\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:262:43\n\n  259 \n  260 ussd.PendingInvoiceForGopa = async () => {\n  261     try {\n→ 262         const user = await prisma.invoice.findMany({\n                where: {\n                  status: 0,\n                  aggregate: 1\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        bid: {\n                        ~~~\n                          include: {\n                            seller: true,\n                            images: true,\n                            gopa: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            assigner: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            orderRequest: {\n                              include: {\n                                requester: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                creater: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                sparePart: {\n                                  include: {\n                                    images: true,\n                                    carModel: {\n                                      include: {\n                                        carBrand: {\n                                          include: {\n                                            manufacturer: true\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n              ?         where?: CartWhereInput\n                      }\n                    }\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.PendingInvoiceForGopa (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:262:22)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:178:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:262:43\n\n  259 \n  260 ussd.PendingInvoiceForGopa = async () => {\n  261     try {\n→ 262         const user = await prisma.invoice.findMany({\n                where: {\n                  status: 0,\n                  aggregate: 1\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        bid: {\n                        ~~~\n                          include: {\n                            seller: true,\n                            images: true,\n                            gopa: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            assigner: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            orderRequest: {\n                              include: {\n                                requester: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                creater: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                sparePart: {\n                                  include: {\n                                    images: true,\n                                    carModel: {\n                                      include: {\n                                        carBrand: {\n                                          include: {\n                                            manufacturer: true\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n              ?         where?: CartWhereInput\n                      }\n                    }\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?."}
{"content_length":"2998","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1678.079,"status":500,"url":"/spdatbaseservice/api/v1/invoice/for-gopa-acceptance"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"6047","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":7079.713,"status":200,"url":"/spdatbaseservice/api/v1/invoice/for-gopa-acceptance"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"497","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1880.675,"status":200,"url":"/spdatbaseservice/api/v1/invoice/update"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"42","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1873.466,"status":200,"url":"/spdatbaseservice/api/v1/invoice/for-gopa-acceptance"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"497","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2001.78,"status":200,"url":"/spdatbaseservice/api/v1/invoice/details/d10108e9-26d2-4ea9-9f8f-ab45329480eb"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.findFirst()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:84:43\n\n  81 \n  82 ussd.InvoiceDetailsFull = async (invoice_id) => {\n  83     try {\n→ 84         const user = await prisma.invoice.findFirst({\n               where: {\n                 invoice_id: \"d10108e9-26d2-4ea9-9f8f-ab45329480eb\"\n               },\n               include: {\n                 address: true,\n                 user: true,\n                 gopa: true,\n                 items: {\n                   include: {\n                     cart: {\n                       bid: {\n                       ~~~\n                         include: {\n                           seller: true,\n                           images: true,\n                           gopa: {\n                             select: {\n                               User_ID: true,\n                               name: true\n                             }\n                           },\n                           assigner: {\n                             select: {\n                               User_ID: true,\n                               name: true\n                             }\n                           },\n                           orderRequest: {\n                             include: {\n                               requester: {\n                                 select: {\n                                   User_ID: true,\n                                   name: true\n                                 }\n                               },\n                               creater: {\n                                 select: {\n                                   User_ID: true,\n                                   name: true\n                                 }\n                               },\n                               sparePart: {\n                                 include: {\n                                   images: true,\n                                   carModel: {\n                                     include: {\n                                       carBrand: {\n                                         include: {\n                                           manufacturer: true\n                                         }\n                                       }\n                                     }\n                                   }\n                                 }\n                               }\n                             }\n                           }\n                         }\n                       },\n             ?         where?: CartWhereInput\n                     }\n                   }\n                 }\n               }\n             })\n\nUnknown argument `bid`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice.findFirst()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:84:43\n\n  81 \n  82 ussd.InvoiceDetailsFull = async (invoice_id) => {\n  83     try {\n→ 84         const user = await prisma.invoice.findFirst({\n               where: {\n                 invoice_id: \"d10108e9-26d2-4ea9-9f8f-ab45329480eb\"\n               },\n               include: {\n                 address: true,\n                 user: true,\n                 gopa: true,\n                 items: {\n                   include: {\n                     cart: {\n                       bid: {\n                       ~~~\n                         include: {\n                           seller: true,\n                           images: true,\n                           gopa: {\n                             select: {\n                               User_ID: true,\n                               name: true\n                             }\n                           },\n                           assigner: {\n                             select: {\n                               User_ID: true,\n                               name: true\n                             }\n                           },\n                           orderRequest: {\n                             include: {\n                               requester: {\n                                 select: {\n                                   User_ID: true,\n                                   name: true\n                                 }\n                               },\n                               creater: {\n                                 select: {\n                                   User_ID: true,\n                                   name: true\n                                 }\n                               },\n                               sparePart: {\n                                 include: {\n                                   images: true,\n                                   carModel: {\n                                     include: {\n                                       carBrand: {\n                                         include: {\n                                           manufacturer: true\n                                         }\n                                       }\n                                     }\n                                   }\n                                 }\n                               }\n                             }\n                           }\n                         }\n                       },\n             ?         where?: CartWhereInput\n                     }\n                   }\n                 }\n               }\n             })\n\nUnknown argument `bid`. Available options are marked with ?.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.InvoiceDetailsFull (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:84:22)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:112:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.findFirst()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:84:43\n\n  81 \n  82 ussd.InvoiceDetailsFull = async (invoice_id) => {\n  83     try {\n→ 84         const user = await prisma.invoice.findFirst({\n               where: {\n                 invoice_id: \"d10108e9-26d2-4ea9-9f8f-ab45329480eb\"\n               },\n               include: {\n                 address: true,\n                 user: true,\n                 gopa: true,\n                 items: {\n                   include: {\n                     cart: {\n                       bid: {\n                       ~~~\n                         include: {\n                           seller: true,\n                           images: true,\n                           gopa: {\n                             select: {\n                               User_ID: true,\n                               name: true\n                             }\n                           },\n                           assigner: {\n                             select: {\n                               User_ID: true,\n                               name: true\n                             }\n                           },\n                           orderRequest: {\n                             include: {\n                               requester: {\n                                 select: {\n                                   User_ID: true,\n                                   name: true\n                                 }\n                               },\n                               creater: {\n                                 select: {\n                                   User_ID: true,\n                                   name: true\n                                 }\n                               },\n                               sparePart: {\n                                 include: {\n                                   images: true,\n                                   carModel: {\n                                     include: {\n                                       carBrand: {\n                                         include: {\n                                           manufacturer: true\n                                         }\n                                       }\n                                     }\n                                   }\n                                 }\n                               }\n                             }\n                           }\n                         }\n                       },\n             ?         where?: CartWhereInput\n                     }\n                   }\n                 }\n               }\n             })\n\nUnknown argument `bid`. Available options are marked with ?."}
{"content_length":"2860","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1496.863,"status":500,"url":"/spdatbaseservice/api/v1/invoice/details-full/d10108e9-26d2-4ea9-9f8f-ab45329480eb"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"6480","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":7611.7,"status":200,"url":"/spdatbaseservice/api/v1/invoice/details-full/d10108e9-26d2-4ea9-9f8f-ab45329480eb"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:170:43\n\n  167 \n  168 ussd.UserInvoicesByStatus = async (user_id, status) => {\n  169     try {\n→ 170         const user = await prisma.invoice.findMany({\n                where: {\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\"\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        bid: {\n                        ~~~\n                          include: {\n                            seller: true,\n                            images: true,\n                            gopa: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            assigner: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            orderRequest: {\n                              include: {\n                                requester: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                creater: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                sparePart: {\n                                  include: {\n                                    images: true,\n                                    carModel: {\n                                      include: {\n                                        carBrand: {\n                                          include: {\n                                            manufacturer: true\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n              ?         where?: CartWhereInput\n                      }\n                    }\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:170:43\n\n  167 \n  168 ussd.UserInvoicesByStatus = async (user_id, status) => {\n  169     try {\n→ 170         const user = await prisma.invoice.findMany({\n                where: {\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\"\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        bid: {\n                        ~~~\n                          include: {\n                            seller: true,\n                            images: true,\n                            gopa: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            assigner: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            orderRequest: {\n                              include: {\n                                requester: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                creater: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                sparePart: {\n                                  include: {\n                                    images: true,\n                                    carModel: {\n                                      include: {\n                                        carBrand: {\n                                          include: {\n                                            manufacturer: true\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n              ?         where?: CartWhereInput\n                      }\n                    }\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.UserInvoicesByStatus (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:170:22)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:146:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:170:43\n\n  167 \n  168 ussd.UserInvoicesByStatus = async (user_id, status) => {\n  169     try {\n→ 170         const user = await prisma.invoice.findMany({\n                where: {\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\"\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        bid: {\n                        ~~~\n                          include: {\n                            seller: true,\n                            images: true,\n                            gopa: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            assigner: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            orderRequest: {\n                              include: {\n                                requester: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                creater: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                sparePart: {\n                                  include: {\n                                    images: true,\n                                    carModel: {\n                                      include: {\n                                        carBrand: {\n                                          include: {\n                                            manufacturer: true\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n              ?         where?: CartWhereInput\n                      }\n                    }\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?."}
{"content_length":"3019","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1282.08,"status":500,"url":"/spdatbaseservice/api/v1/invoice/user-invoices/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"6482","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":6944.174,"status":200,"url":"/spdatbaseservice/api/v1/invoice/user-invoices/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:170:43\n\n  167 \n  168 ussd.UserInvoicesByStatus = async (user_id, status) => {\n  169     try {\n→ 170         const user = await prisma.invoice.findMany({\n                where: {\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                  status: {\n                    equals: \"0\"\n                            ~~~\n                  }\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        include: {\n                          bid: {\n                            include: {\n                              seller: true,\n                              images: true,\n                              gopa: {\n                                select: {\n                                  User_ID: true,\n                                  name: true\n                                }\n                              },\n                              assigner: {\n                                select: {\n                                  User_ID: true,\n                                  name: true\n                                }\n                              },\n                              orderRequest: {\n                                include: {\n                                  requester: {\n                                    select: {\n                                      User_ID: true,\n                                      name: true\n                                    }\n                                  },\n                                  creater: {\n                                    select: {\n                                      User_ID: true,\n                                      name: true\n                                    }\n                                  },\n                                  sparePart: {\n                                    include: {\n                                      images: true,\n                                      carModel: {\n                                        include: {\n                                          carBrand: {\n                                            include: {\n                                              manufacturer: true\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              })\n\nArgument `equals`: Invalid value provided. Expected Int or IntFieldRefInput, provided String.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:170:43\n\n  167 \n  168 ussd.UserInvoicesByStatus = async (user_id, status) => {\n  169     try {\n→ 170         const user = await prisma.invoice.findMany({\n                where: {\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                  status: {\n                    equals: \"0\"\n                            ~~~\n                  }\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        include: {\n                          bid: {\n                            include: {\n                              seller: true,\n                              images: true,\n                              gopa: {\n                                select: {\n                                  User_ID: true,\n                                  name: true\n                                }\n                              },\n                              assigner: {\n                                select: {\n                                  User_ID: true,\n                                  name: true\n                                }\n                              },\n                              orderRequest: {\n                                include: {\n                                  requester: {\n                                    select: {\n                                      User_ID: true,\n                                      name: true\n                                    }\n                                  },\n                                  creater: {\n                                    select: {\n                                      User_ID: true,\n                                      name: true\n                                    }\n                                  },\n                                  sparePart: {\n                                    include: {\n                                      images: true,\n                                      carModel: {\n                                        include: {\n                                          carBrand: {\n                                            include: {\n                                              manufacturer: true\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              })\n\nArgument `equals`: Invalid value provided. Expected Int or IntFieldRefInput, provided String.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.UserInvoicesByStatus (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:170:22)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:146:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:170:43\n\n  167 \n  168 ussd.UserInvoicesByStatus = async (user_id, status) => {\n  169     try {\n→ 170         const user = await prisma.invoice.findMany({\n                where: {\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                  status: {\n                    equals: \"0\"\n                            ~~~\n                  }\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        include: {\n                          bid: {\n                            include: {\n                              seller: true,\n                              images: true,\n                              gopa: {\n                                select: {\n                                  User_ID: true,\n                                  name: true\n                                }\n                              },\n                              assigner: {\n                                select: {\n                                  User_ID: true,\n                                  name: true\n                                }\n                              },\n                              orderRequest: {\n                                include: {\n                                  requester: {\n                                    select: {\n                                      User_ID: true,\n                                      name: true\n                                    }\n                                  },\n                                  creater: {\n                                    select: {\n                                      User_ID: true,\n                                      name: true\n                                    }\n                                  },\n                                  sparePart: {\n                                    include: {\n                                      images: true,\n                                      carModel: {\n                                        include: {\n                                          carBrand: {\n                                            include: {\n                                              manufacturer: true\n                                            }\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              })\n\nArgument `equals`: Invalid value provided. Expected Int or IntFieldRefInput, provided String."}
{"content_length":"3252","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1303.731,"status":500,"url":"/spdatbaseservice/api/v1/invoice/user-invoices/4298e2e3-4215-4884-9bb1-3fc7d9695e49/0"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"6482","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":7048.712,"status":200,"url":"/spdatbaseservice/api/v1/invoice/user-invoices/4298e2e3-4215-4884-9bb1-3fc7d9695e49/0"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"6482","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":7414.219,"status":200,"url":"/spdatbaseservice/api/v1/invoice/user-invoices/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:357:43\n\n  354 \n  355 ussd.GopaAcceptedInvoices = async (gopa_user_id) => {\n  356     try {\n→ 357         const user = await prisma.invoice.findMany({\n                where: {\n                  gopa_user_id: \"b4181aa4-d17d-4577-82e9-8913c94827a3\"\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        bid: {\n                        ~~~\n                          include: {\n                            seller: true,\n                            images: true,\n                            gopa: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            assigner: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            orderRequest: {\n                              include: {\n                                requester: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                creater: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                sparePart: {\n                                  include: {\n                                    images: true,\n                                    carModel: {\n                                      include: {\n                                        carBrand: {\n                                          include: {\n                                            manufacturer: true\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n              ?         where?: CartWhereInput\n                      }\n                    }\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:357:43\n\n  354 \n  355 ussd.GopaAcceptedInvoices = async (gopa_user_id) => {\n  356     try {\n→ 357         const user = await prisma.invoice.findMany({\n                where: {\n                  gopa_user_id: \"b4181aa4-d17d-4577-82e9-8913c94827a3\"\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        bid: {\n                        ~~~\n                          include: {\n                            seller: true,\n                            images: true,\n                            gopa: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            assigner: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            orderRequest: {\n                              include: {\n                                requester: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                creater: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                sparePart: {\n                                  include: {\n                                    images: true,\n                                    carModel: {\n                                      include: {\n                                        carBrand: {\n                                          include: {\n                                            manufacturer: true\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n              ?         where?: CartWhereInput\n                      }\n                    }\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.GopaAcceptedInvoices (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:357:22)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:214:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.findMany()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:357:43\n\n  354 \n  355 ussd.GopaAcceptedInvoices = async (gopa_user_id) => {\n  356     try {\n→ 357         const user = await prisma.invoice.findMany({\n                where: {\n                  gopa_user_id: \"b4181aa4-d17d-4577-82e9-8913c94827a3\"\n                },\n                orderBy: {\n                  createdAt: \"desc\"\n                },\n                include: {\n                  address: true,\n                  user: true,\n                  gopa: true,\n                  items: {\n                    include: {\n                      cart: {\n                        bid: {\n                        ~~~\n                          include: {\n                            seller: true,\n                            images: true,\n                            gopa: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            assigner: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            orderRequest: {\n                              include: {\n                                requester: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                creater: {\n                                  select: {\n                                    User_ID: true,\n                                    name: true\n                                  }\n                                },\n                                sparePart: {\n                                  include: {\n                                    images: true,\n                                    carModel: {\n                                      include: {\n                                        carBrand: {\n                                          include: {\n                                            manufacturer: true\n                                          }\n                                        }\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        },\n              ?         where?: CartWhereInput\n                      }\n                    }\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?."}
{"content_length":"3021","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1804.304,"status":500,"url":"/spdatbaseservice/api/v1/invoice/gopa-accepted-invoices/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"6482","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":7445.555,"status":200,"url":"/spdatbaseservice/api/v1/invoice/gopa-accepted-invoices/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.update()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:36:55\n\n  33 \n  34 ussd.updateInvoice = async (invoice) => {\n  35     try {\n→ 36         const updatedContinent = await prisma.invoice.update(\nCan't reach database server at `ep-hidden-leaf-a231vqsn-pooler.eu-central-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-hidden-leaf-a231vqsn-pooler.eu-central-1.aws.neon.tech:5432`.","name":"PrismaClientInitializationError","stack":"PrismaClientInitializationError: \nInvalid `prisma.invoice.update()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:36:55\n\n  33 \n  34 ussd.updateInvoice = async (invoice) => {\n  35     try {\n→ 36         const updatedContinent = await prisma.invoice.update(\nCan't reach database server at `ep-hidden-leaf-a231vqsn-pooler.eu-central-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-hidden-leaf-a231vqsn-pooler.eu-central-1.aws.neon.tech:5432`.\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:7615)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.updateInvoice (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:36:34)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:47:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.update()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:36:55\n\n  33 \n  34 ussd.updateInvoice = async (invoice) => {\n  35     try {\n→ 36         const updatedContinent = await prisma.invoice.update(\nCan't reach database server at `ep-hidden-leaf-a231vqsn-pooler.eu-central-1.aws.neon.tech:5432`\n\nPlease make sure your database server is running at `ep-hidden-leaf-a231vqsn-pooler.eu-central-1.aws.neon.tech:5432`."}
{"content_length":"543","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":5045.067,"status":500,"url":"/spdatbaseservice/api/v1/invoice/update"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"497","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1623.472,"status":200,"url":"/spdatbaseservice/api/v1/invoice/update"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"6482","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":7765.348,"status":200,"url":"/spdatbaseservice/api/v1/invoice/ready-for-pick-up"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"411","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1778.747,"status":200,"url":"/spdatbaseservice/api/v1/invoice/update-item"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"411","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1552.534,"status":200,"url":"/spdatbaseservice/api/v1/invoice/item-details/a1e77c57-cffd-4031-b127-d05b255b1921"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice_Item.findFirst()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:610:48\n\n  607 \n  608 ussd.InvoiceItemDetailsFull = async (item_id) => {\n  609     try {\n→ 610         const user = await prisma.invoice_Item.findFirst({\n                where: {\n                  item_id: \"a1e77c57-cffd-4031-b127-d05b255b1921\"\n                },\n                include: {\n                  invoice: true,\n                  cart: {\n                    bid: {\n                    ~~~\n                      include: {\n                        seller: true,\n                        images: true,\n                        gopa: {\n                          select: {\n                            User_ID: true,\n                            name: true\n                          }\n                        },\n                        assigner: {\n                          select: {\n                            User_ID: true,\n                            name: true\n                          }\n                        },\n                        orderRequest: {\n                          include: {\n                            requester: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            creater: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            sparePart: {\n                              include: {\n                                images: true,\n                                carModel: {\n                                  include: {\n                                    carBrand: {\n                                      include: {\n                                        manufacturer: true\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n              ?     where?: CartWhereInput\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice_Item.findFirst()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:610:48\n\n  607 \n  608 ussd.InvoiceItemDetailsFull = async (item_id) => {\n  609     try {\n→ 610         const user = await prisma.invoice_Item.findFirst({\n                where: {\n                  item_id: \"a1e77c57-cffd-4031-b127-d05b255b1921\"\n                },\n                include: {\n                  invoice: true,\n                  cart: {\n                    bid: {\n                    ~~~\n                      include: {\n                        seller: true,\n                        images: true,\n                        gopa: {\n                          select: {\n                            User_ID: true,\n                            name: true\n                          }\n                        },\n                        assigner: {\n                          select: {\n                            User_ID: true,\n                            name: true\n                          }\n                        },\n                        orderRequest: {\n                          include: {\n                            requester: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            creater: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            sparePart: {\n                              include: {\n                                images: true,\n                                carModel: {\n                                  include: {\n                                    carBrand: {\n                                      include: {\n                                        manufacturer: true\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n              ?     where?: CartWhereInput\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.InvoiceItemDetailsFull (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:610:22)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:380:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice_Item.findFirst()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:610:48\n\n  607 \n  608 ussd.InvoiceItemDetailsFull = async (item_id) => {\n  609     try {\n→ 610         const user = await prisma.invoice_Item.findFirst({\n                where: {\n                  item_id: \"a1e77c57-cffd-4031-b127-d05b255b1921\"\n                },\n                include: {\n                  invoice: true,\n                  cart: {\n                    bid: {\n                    ~~~\n                      include: {\n                        seller: true,\n                        images: true,\n                        gopa: {\n                          select: {\n                            User_ID: true,\n                            name: true\n                          }\n                        },\n                        assigner: {\n                          select: {\n                            User_ID: true,\n                            name: true\n                          }\n                        },\n                        orderRequest: {\n                          include: {\n                            requester: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            creater: {\n                              select: {\n                                User_ID: true,\n                                name: true\n                              }\n                            },\n                            sparePart: {\n                              include: {\n                                images: true,\n                                carModel: {\n                                  include: {\n                                    carBrand: {\n                                      include: {\n                                        manufacturer: true\n                                      }\n                                    }\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    },\n              ?     where?: CartWhereInput\n                  }\n                }\n              })\n\nUnknown argument `bid`. Available options are marked with ?."}
{"content_length":"2564","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1280.587,"status":500,"url":"/spdatbaseservice/api/v1/invoice/item-details-full/a1e77c57-cffd-4031-b127-d05b255b1921"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"5421","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":5767.573,"status":200,"url":"/spdatbaseservice/api/v1/invoice/item-details-full/a1e77c57-cffd-4031-b127-d05b255b1921"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice_Item.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:573:56\n\n  570 ussd.addInvoiceItems = async (invoiceItem) => {\n  571     try {\n  572         \n→ 573         const newContinent = await prisma.invoice_Item.create({\n                data: {\n                  total_items: 10,\n                  total_amount: 500,\n                  amount: 100,\n                  service_charge: 2,\n                  delivery_charge: 1,\n                  tax: 2,\n                  paymentResponseRefrence: \"\",\n                  paymentResponse: \"\",\n                  paymentNumber: \"233554340244\",\n                  paymentMode: \"WALLET\",\n                  paymentProvider: \"MTN\",\n                  statusMessage: \"PENDING\",\n                  aggregate: 1,\n                  gopa_accepted_status: 0,\n                  qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                  address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n              +   user_id: String\n                }\n              })\n\nArgument `user_id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice_Item.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:573:56\n\n  570 ussd.addInvoiceItems = async (invoiceItem) => {\n  571     try {\n  572         \n→ 573         const newContinent = await prisma.invoice_Item.create({\n                data: {\n                  total_items: 10,\n                  total_amount: 500,\n                  amount: 100,\n                  service_charge: 2,\n                  delivery_charge: 1,\n                  tax: 2,\n                  paymentResponseRefrence: \"\",\n                  paymentResponse: \"\",\n                  paymentNumber: \"233554340244\",\n                  paymentMode: \"WALLET\",\n                  paymentProvider: \"MTN\",\n                  statusMessage: \"PENDING\",\n                  aggregate: 1,\n                  gopa_accepted_status: 0,\n                  qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                  address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n              +   user_id: String\n                }\n              })\n\nArgument `user_id` is missing.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.addInvoiceItems (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:573:30)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:44:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice_Item.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:573:56\n\n  570 ussd.addInvoiceItems = async (invoiceItem) => {\n  571     try {\n  572         \n→ 573         const newContinent = await prisma.invoice_Item.create({\n                data: {\n                  total_items: 10,\n                  total_amount: 500,\n                  amount: 100,\n                  service_charge: 2,\n                  delivery_charge: 1,\n                  tax: 2,\n                  paymentResponseRefrence: \"\",\n                  paymentResponse: \"\",\n                  paymentNumber: \"233554340244\",\n                  paymentMode: \"WALLET\",\n                  paymentProvider: \"MTN\",\n                  statusMessage: \"PENDING\",\n                  aggregate: 1,\n                  gopa_accepted_status: 0,\n                  qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                  address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n              +   user_id: String\n                }\n              })\n\nArgument `user_id` is missing."}
{"content_length":"1258","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1925.334,"status":500,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice_Item.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:576:56\n\n  573 ussd.addInvoiceItems = async (invoiceItem) => {\n  574     try {\n  575         \n→ 576         const newContinent = await prisma.invoice_Item.create({\n                data: {\n                  total_items: 10,\n                  total_amount: 500,\n                  amount: 100,\n                  service_charge: 2,\n                  delivery_charge: 1,\n                  tax: 2,\n                  paymentResponseRefrence: \"\",\n                  paymentResponse: \"\",\n                  paymentNumber: \"233554340244\",\n                  paymentMode: \"WALLET\",\n                  paymentProvider: \"MTN\",\n                  statusMessage: \"PENDING\",\n                  aggregate: 1,\n                  gopa_accepted_status: 0,\n                  qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                  address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n              +   user_id: String\n                }\n              })\n\nArgument `user_id` is missing.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice_Item.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:576:56\n\n  573 ussd.addInvoiceItems = async (invoiceItem) => {\n  574     try {\n  575         \n→ 576         const newContinent = await prisma.invoice_Item.create({\n                data: {\n                  total_items: 10,\n                  total_amount: 500,\n                  amount: 100,\n                  service_charge: 2,\n                  delivery_charge: 1,\n                  tax: 2,\n                  paymentResponseRefrence: \"\",\n                  paymentResponse: \"\",\n                  paymentNumber: \"233554340244\",\n                  paymentMode: \"WALLET\",\n                  paymentProvider: \"MTN\",\n                  statusMessage: \"PENDING\",\n                  aggregate: 1,\n                  gopa_accepted_status: 0,\n                  qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                  address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n              +   user_id: String\n                }\n              })\n\nArgument `user_id` is missing.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.addInvoiceItems (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:576:30)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:44:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice_Item.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:576:56\n\n  573 ussd.addInvoiceItems = async (invoiceItem) => {\n  574     try {\n  575         \n→ 576         const newContinent = await prisma.invoice_Item.create({\n                data: {\n                  total_items: 10,\n                  total_amount: 500,\n                  amount: 100,\n                  service_charge: 2,\n                  delivery_charge: 1,\n                  tax: 2,\n                  paymentResponseRefrence: \"\",\n                  paymentResponse: \"\",\n                  paymentNumber: \"233554340244\",\n                  paymentMode: \"WALLET\",\n                  paymentProvider: \"MTN\",\n                  statusMessage: \"PENDING\",\n                  aggregate: 1,\n                  gopa_accepted_status: 0,\n                  qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n                  User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                  address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n              +   user_id: String\n                }\n              })\n\nArgument `user_id` is missing."}
{"content_length":"1258","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1431.259,"status":500,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create({\n       data: {\n         total_items: 10,\n         total_amount: 500,\n         amount: 100,\n         service_charge: 2,\n         delivery_charge: 1,\n         tax: 2,\n         paymentResponseRefrence: \"\",\n         paymentResponse: \"\",\n         paymentNumber: \"233554340244\",\n         paymentMode: \"WALLET\",\n         paymentProvider: \"MTN\",\n         statusMessage: \"PENDING\",\n         aggregate: 1,\n         gopa_accepted_status: 0,\n         qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n         User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n         address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n         invoice_items: {\n         ~~~~~~~~~~~~~\n           create: [\n             {\n               total_items: 10,\n               total_amount: 200,\n               statusMessage: \"PENDING\",\n               qr_value: \"dfhgfhhfgjhfsjhfdjhfdjhf\",\n               invoice_id: \"d10108e9-26d2-4ea9-9f8f-ab45329480eb\",\n               user_id: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n               aggregate: 1,\n               cart_ID: \"dd48aad2-88e9-4cf2-a818-b7efa22ea03f\"\n             }\n           ]\n         },\n     ?   id?: Int,\n     ?   invoice_id?: String,\n     ?   createdAt?: DateTime,\n     ?   status?: Int,\n     ?   paymentStatus?: Int,\n     ?   gopa_user_id?: String | Null,\n     ?   dateGopaAccepted?: DateTime | Null,\n     ?   items?: Invoice_ItemUncheckedCreateNestedManyWithoutInvoiceInput,\n     ?   deliveries?: DeliveryUncheckedCreateNestedManyWithoutInvoiceInput\n       },\n       include: {\n         invoice_items: true\n       }\n     })\n\nUnknown argument `invoice_items`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create({\n       data: {\n         total_items: 10,\n         total_amount: 500,\n         amount: 100,\n         service_charge: 2,\n         delivery_charge: 1,\n         tax: 2,\n         paymentResponseRefrence: \"\",\n         paymentResponse: \"\",\n         paymentNumber: \"233554340244\",\n         paymentMode: \"WALLET\",\n         paymentProvider: \"MTN\",\n         statusMessage: \"PENDING\",\n         aggregate: 1,\n         gopa_accepted_status: 0,\n         qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n         User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n         address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n         invoice_items: {\n         ~~~~~~~~~~~~~\n           create: [\n             {\n               total_items: 10,\n               total_amount: 200,\n               statusMessage: \"PENDING\",\n               qr_value: \"dfhgfhhfgjhfsjhfdjhfdjhf\",\n               invoice_id: \"d10108e9-26d2-4ea9-9f8f-ab45329480eb\",\n               user_id: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n               aggregate: 1,\n               cart_ID: \"dd48aad2-88e9-4cf2-a818-b7efa22ea03f\"\n             }\n           ]\n         },\n     ?   id?: Int,\n     ?   invoice_id?: String,\n     ?   createdAt?: DateTime,\n     ?   status?: Int,\n     ?   paymentStatus?: Int,\n     ?   gopa_user_id?: String | Null,\n     ?   dateGopaAccepted?: DateTime | Null,\n     ?   items?: Invoice_ItemUncheckedCreateNestedManyWithoutInvoiceInput,\n     ?   deliveries?: DeliveryUncheckedCreateNestedManyWithoutInvoiceInput\n       },\n       include: {\n         invoice_items: true\n       }\n     })\n\nUnknown argument `invoice_items`. Available options are marked with ?.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.addInvoiceWithItems (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:28)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:44:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create({\n       data: {\n         total_items: 10,\n         total_amount: 500,\n         amount: 100,\n         service_charge: 2,\n         delivery_charge: 1,\n         tax: 2,\n         paymentResponseRefrence: \"\",\n         paymentResponse: \"\",\n         paymentNumber: \"233554340244\",\n         paymentMode: \"WALLET\",\n         paymentProvider: \"MTN\",\n         statusMessage: \"PENDING\",\n         aggregate: 1,\n         gopa_accepted_status: 0,\n         qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n         User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n         address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n         invoice_items: {\n         ~~~~~~~~~~~~~\n           create: [\n             {\n               total_items: 10,\n               total_amount: 200,\n               statusMessage: \"PENDING\",\n               qr_value: \"dfhgfhhfgjhfsjhfdjhfdjhf\",\n               invoice_id: \"d10108e9-26d2-4ea9-9f8f-ab45329480eb\",\n               user_id: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n               aggregate: 1,\n               cart_ID: \"dd48aad2-88e9-4cf2-a818-b7efa22ea03f\"\n             }\n           ]\n         },\n     ?   id?: Int,\n     ?   invoice_id?: String,\n     ?   createdAt?: DateTime,\n     ?   status?: Int,\n     ?   paymentStatus?: Int,\n     ?   gopa_user_id?: String | Null,\n     ?   dateGopaAccepted?: DateTime | Null,\n     ?   items?: Invoice_ItemUncheckedCreateNestedManyWithoutInvoiceInput,\n     ?   deliveries?: DeliveryUncheckedCreateNestedManyWithoutInvoiceInput\n       },\n       include: {\n         invoice_items: true\n       }\n     })\n\nUnknown argument `invoice_items`. Available options are marked with ?."}
{"content_length":"2054","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1602.281,"status":500,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create({\n       data: {\n         total_items: 10,\n         total_amount: 500,\n         amount: 100,\n         service_charge: 2,\n         delivery_charge: 1,\n         tax: 2,\n         paymentResponseRefrence: \"\",\n         paymentResponse: \"\",\n         paymentNumber: \"233554340244\",\n         paymentMode: \"WALLET\",\n         paymentProvider: \"MTN\",\n         statusMessage: \"PENDING\",\n         aggregate: 1,\n         gopa_accepted_status: 0,\n         qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n         User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n         address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n         items: {\n           create: [\n             {\n               total_items: 10,\n               total_amount: 200,\n               statusMessage: \"PENDING\",\n               qr_value: \"dfhgfhhfgjhfsjhfdjhfdjhf\",\n               invoice_id: \"d10108e9-26d2-4ea9-9f8f-ab45329480eb\",\n               user_id: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n               aggregate: 1,\n               cart_ID: \"dd48aad2-88e9-4cf2-a818-b7efa22ea03f\"\n             }\n           ]\n         }\n       },\n       include: {\n         invoice_items: true\n       }\n     })\n\nUnknown argument `invoice_id`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create({\n       data: {\n         total_items: 10,\n         total_amount: 500,\n         amount: 100,\n         service_charge: 2,\n         delivery_charge: 1,\n         tax: 2,\n         paymentResponseRefrence: \"\",\n         paymentResponse: \"\",\n         paymentNumber: \"233554340244\",\n         paymentMode: \"WALLET\",\n         paymentProvider: \"MTN\",\n         statusMessage: \"PENDING\",\n         aggregate: 1,\n         gopa_accepted_status: 0,\n         qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n         User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n         address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n         items: {\n           create: [\n             {\n               total_items: 10,\n               total_amount: 200,\n               statusMessage: \"PENDING\",\n               qr_value: \"dfhgfhhfgjhfsjhfdjhfdjhf\",\n               invoice_id: \"d10108e9-26d2-4ea9-9f8f-ab45329480eb\",\n               user_id: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n               aggregate: 1,\n               cart_ID: \"dd48aad2-88e9-4cf2-a818-b7efa22ea03f\"\n             }\n           ]\n         }\n       },\n       include: {\n         invoice_items: true\n       }\n     })\n\nUnknown argument `invoice_id`. Available options are marked with ?.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.addInvoiceWithItems (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:28)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:44:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create({\n       data: {\n         total_items: 10,\n         total_amount: 500,\n         amount: 100,\n         service_charge: 2,\n         delivery_charge: 1,\n         tax: 2,\n         paymentResponseRefrence: \"\",\n         paymentResponse: \"\",\n         paymentNumber: \"233554340244\",\n         paymentMode: \"WALLET\",\n         paymentProvider: \"MTN\",\n         statusMessage: \"PENDING\",\n         aggregate: 1,\n         gopa_accepted_status: 0,\n         qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n         User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n         address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n         items: {\n           create: [\n             {\n               total_items: 10,\n               total_amount: 200,\n               statusMessage: \"PENDING\",\n               qr_value: \"dfhgfhhfgjhfsjhfdjhfdjhf\",\n               invoice_id: \"d10108e9-26d2-4ea9-9f8f-ab45329480eb\",\n               user_id: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n               aggregate: 1,\n               cart_ID: \"dd48aad2-88e9-4cf2-a818-b7efa22ea03f\"\n             }\n           ]\n         }\n       },\n       include: {\n         invoice_items: true\n       }\n     })\n\nUnknown argument `invoice_id`. Available options are marked with ?."}
{"content_length":"1642","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1905.785,"status":500,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create({\n       data: {\n         total_items: 10,\n         total_amount: 500,\n         amount: 100,\n         service_charge: 2,\n         delivery_charge: 1,\n         tax: 2,\n         paymentResponseRefrence: \"\",\n         paymentResponse: \"\",\n         paymentNumber: \"233554340244\",\n         paymentMode: \"WALLET\",\n         paymentProvider: \"MTN\",\n         statusMessage: \"PENDING\",\n         aggregate: 1,\n         gopa_accepted_status: 0,\n         qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n         User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n         address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n         items: {\n           create: [\n             {\n               total_items: 10,\n               total_amount: 200,\n               statusMessage: \"PENDING\",\n               qr_value: \"dfhgfhhfgjhfsjhfdjhfdjhf\",\n               user_id: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n               aggregate: 1,\n               cart_ID: \"dd48aad2-88e9-4cf2-a818-b7efa22ea03f\"\n             }\n           ]\n         }\n       },\n       include: {\n         invoice_items: true,\n         ~~~~~~~~~~~~~\n     ?   address?: true,\n     ?   user?: true,\n     ?   gopa?: true,\n     ?   items?: true,\n     ?   deliveries?: true\n       }\n     })\n\nUnknown field `invoice_items` for include statement on model `Invoice`. Available options are marked with ?.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create({\n       data: {\n         total_items: 10,\n         total_amount: 500,\n         amount: 100,\n         service_charge: 2,\n         delivery_charge: 1,\n         tax: 2,\n         paymentResponseRefrence: \"\",\n         paymentResponse: \"\",\n         paymentNumber: \"233554340244\",\n         paymentMode: \"WALLET\",\n         paymentProvider: \"MTN\",\n         statusMessage: \"PENDING\",\n         aggregate: 1,\n         gopa_accepted_status: 0,\n         qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n         User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n         address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n         items: {\n           create: [\n             {\n               total_items: 10,\n               total_amount: 200,\n               statusMessage: \"PENDING\",\n               qr_value: \"dfhgfhhfgjhfsjhfdjhfdjhf\",\n               user_id: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n               aggregate: 1,\n               cart_ID: \"dd48aad2-88e9-4cf2-a818-b7efa22ea03f\"\n             }\n           ]\n         }\n       },\n       include: {\n         invoice_items: true,\n         ~~~~~~~~~~~~~\n     ?   address?: true,\n     ?   user?: true,\n     ?   gopa?: true,\n     ?   items?: true,\n     ?   deliveries?: true\n       }\n     })\n\nUnknown field `invoice_items` for include statement on model `Invoice`. Available options are marked with ?.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.addInvoiceWithItems (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:28)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:44:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create({\n       data: {\n         total_items: 10,\n         total_amount: 500,\n         amount: 100,\n         service_charge: 2,\n         delivery_charge: 1,\n         tax: 2,\n         paymentResponseRefrence: \"\",\n         paymentResponse: \"\",\n         paymentNumber: \"233554340244\",\n         paymentMode: \"WALLET\",\n         paymentProvider: \"MTN\",\n         statusMessage: \"PENDING\",\n         aggregate: 1,\n         gopa_accepted_status: 0,\n         qr_value: \"dhhdhfhfhfhfhfffhfhfyfbnfyrbcyf\",\n         User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n         address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n         items: {\n           create: [\n             {\n               total_items: 10,\n               total_amount: 200,\n               statusMessage: \"PENDING\",\n               qr_value: \"dfhgfhhfgjhfsjhfdjhfdjhf\",\n               user_id: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n               aggregate: 1,\n               cart_ID: \"dd48aad2-88e9-4cf2-a818-b7efa22ea03f\"\n             }\n           ]\n         }\n       },\n       include: {\n         invoice_items: true,\n         ~~~~~~~~~~~~~\n     ?   address?: true,\n     ?   user?: true,\n     ?   gopa?: true,\n     ?   items?: true,\n     ?   deliveries?: true\n       }\n     })\n\nUnknown field `invoice_items` for include statement on model `Invoice`. Available options are marked with ?."}
{"content_length":"1762","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3402.165,"status":500,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"1029","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3298.256,"status":200,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"805","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2248.167,"status":200,"url":"/spdatbaseservice/api/v1/wallet/system-wallets"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"233","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2401.492,"status":200,"url":"/spdatbaseservice/api/v1/wallet/details-by-wallet-number/S00002"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"51","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":2751.886,"status":200,"url":"/spdatbaseservice/api/v1/transactions/add-many"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"1749","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":5084.551,"status":200,"url":"/spdatbaseservice/api/v1/user/login"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1561.429,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"8454","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":5971.111,"status":200,"url":"/spdatbaseservice/api/v1/cart/full-user-carts/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"381","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2120.653,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/SERVICE_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"373","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2153.268,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/DELIVERY_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"360","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2047.253,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/TAX"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1667.745,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"36207","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":4926.284,"status":200,"url":"/spdatbaseservice/api/v1/order-request/user-active-requests/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2025.999,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"480","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1858.513,"status":200,"url":"/spdatbaseservice/api/v1/bidding/details/5daf70ff-37c3-4782-a4ed-ec3a874707d6"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"249","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1928.945,"status":200,"url":"/spdatbaseservice/api/v1/cart/add"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1638.574,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"13291","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":5750.137,"status":200,"url":"/spdatbaseservice/api/v1/cart/full-user-carts/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"381","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1615.427,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/SERVICE_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"373","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1614.353,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/DELIVERY_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"360","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1616.62,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/TAX"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2206.029,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"13291","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":6103.402,"status":200,"url":"/spdatbaseservice/api/v1/cart/full-user-carts/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"381","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2936.282,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/SERVICE_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"373","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1615.655,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/DELIVERY_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"360","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1614.596,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/TAX"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"1817","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3052.554,"status":200,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1641.141,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"13291","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":5413.414,"status":200,"url":"/spdatbaseservice/api/v1/cart/full-user-carts/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"381","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1604.224,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/SERVICE_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"373","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1607.73,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/DELIVERY_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"360","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1530.536,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/TAX"}
{"clientVersion":"5.22.0","code":"P2002","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create(\nUnique constraint failed on the fields: (`cart_ID`)","meta":{"modelName":"Invoice","target":["cart_ID"]},"name":"PrismaClientKnownRequestError","stack":"PrismaClientKnownRequestError: \nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create(\nUnique constraint failed on the fields: (`cart_ID`)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:7315)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.addInvoiceWithItems (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:28)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:44:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.create()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:38:49\n\n  35 console.log(\"XXXXXXXXXXXXXXXXXXXXXXXXXXXXX\")\n  36 console.log(invoice)\n  37 console.log(invoiceItems)\n→ 38 const newInvoice = await prisma.invoice.create(\nUnique constraint failed on the fields: (`cart_ID`)"}
{"content_length":"405","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":2386.277,"status":500,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1719.054,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"13291","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":5833.275,"status":200,"url":"/spdatbaseservice/api/v1/cart/full-user-carts/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"381","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1733.498,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/SERVICE_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"373","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1885.678,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/DELIVERY_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"360","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1939.273,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/TAX"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"1818","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3306.088,"status":200,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"clientVersion":"5.22.0","label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.update()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:68:55\n\n  65 \n  66 ussd.updateInvoice = async (invoice) => {\n  67     try {\n→ 68         const updatedContinent = await prisma.invoice.update({\n               where: {\n                 invoice_id: \"5af09043-be3d-47cf-8f4c-ac05bef5ab9f\"\n               },\n               data: {\n                 id: 6,\n                 invoice_id: \"5af09043-be3d-47cf-8f4c-ac05bef5ab9f\",\n                 total_items: 6,\n                 total_amount: 5596.05,\n                 amount: 5505,\n                 service_charge: 35,\n                 delivery_charge: 35,\n                 tax: 1,\n                 createdAt: \"2025-04-13T13:34:45.804Z\",\n                 status: 0,\n                 paymentStatus: \"FAILED\",\n                                ~~~~~~~~\n                 paymentResponseRefrence: \"05900948-d867-40ee-8368-ad9441612971\",\n                 paymentResponse: {\n                   paymentReference: \"05900948-d867-40ee-8368-ad9441612971\",\n                   paymentStatus: \"SUCCESS\",\n                   message: \"Payment request successful\"\n                 },\n                 paymentMode: \"WALLET\",\n                 paymentNumber: \"233554340244\",\n                 paymentProvider: \"MTN\",\n                 statusMessage: \"PENDING\",\n                 aggregate: 1,\n                 gopa_accepted_status: 0,\n                 qr_value: \"2e83458d-f4c2-4e75-8861-47f37a5a81aa\",\n                 User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                 gopa_user_id: null,\n                 address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n                 dateGopaAccepted: null\n               }\n             })\n\nArgument `paymentStatus`: Invalid value provided. Expected Int or IntFieldUpdateOperationsInput, provided String.","name":"PrismaClientValidationError","stack":"PrismaClientValidationError: \nInvalid `prisma.invoice.update()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:68:55\n\n  65 \n  66 ussd.updateInvoice = async (invoice) => {\n  67     try {\n→ 68         const updatedContinent = await prisma.invoice.update({\n               where: {\n                 invoice_id: \"5af09043-be3d-47cf-8f4c-ac05bef5ab9f\"\n               },\n               data: {\n                 id: 6,\n                 invoice_id: \"5af09043-be3d-47cf-8f4c-ac05bef5ab9f\",\n                 total_items: 6,\n                 total_amount: 5596.05,\n                 amount: 5505,\n                 service_charge: 35,\n                 delivery_charge: 35,\n                 tax: 1,\n                 createdAt: \"2025-04-13T13:34:45.804Z\",\n                 status: 0,\n                 paymentStatus: \"FAILED\",\n                                ~~~~~~~~\n                 paymentResponseRefrence: \"05900948-d867-40ee-8368-ad9441612971\",\n                 paymentResponse: {\n                   paymentReference: \"05900948-d867-40ee-8368-ad9441612971\",\n                   paymentStatus: \"SUCCESS\",\n                   message: \"Payment request successful\"\n                 },\n                 paymentMode: \"WALLET\",\n                 paymentNumber: \"233554340244\",\n                 paymentProvider: \"MTN\",\n                 statusMessage: \"PENDING\",\n                 aggregate: 1,\n                 gopa_accepted_status: 0,\n                 qr_value: \"2e83458d-f4c2-4e75-8861-47f37a5a81aa\",\n                 User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                 gopa_user_id: null,\n                 address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n                 dateGopaAccepted: null\n               }\n             })\n\nArgument `paymentStatus`: Invalid value provided. Expected Int or IntFieldUpdateOperationsInput, provided String.\n    at wn (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:29:1363)\n    at $n.handleRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6958)\n    at $n.handleAndLogRequestError (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6623)\n    at $n.request (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:121:6307)\n    at async l (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/node_modules/@prisma/client/runtime/library.js:130:9633)\n    at async ussd.updateInvoice (/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:68:34)\n    at async /Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/controllers/InvoiceController.js:75:18"}
{"label":"Spare Spart api logs","level":"error","message":"\nInvalid `prisma.invoice.update()` invocation in\n/Users/testdevice/Desktop/Source Code/Node JS/Spare Part/SPDatabaseServices/DBFunctions/InvoiceDb.js:68:55\n\n  65 \n  66 ussd.updateInvoice = async (invoice) => {\n  67     try {\n→ 68         const updatedContinent = await prisma.invoice.update({\n               where: {\n                 invoice_id: \"5af09043-be3d-47cf-8f4c-ac05bef5ab9f\"\n               },\n               data: {\n                 id: 6,\n                 invoice_id: \"5af09043-be3d-47cf-8f4c-ac05bef5ab9f\",\n                 total_items: 6,\n                 total_amount: 5596.05,\n                 amount: 5505,\n                 service_charge: 35,\n                 delivery_charge: 35,\n                 tax: 1,\n                 createdAt: \"2025-04-13T13:34:45.804Z\",\n                 status: 0,\n                 paymentStatus: \"FAILED\",\n                                ~~~~~~~~\n                 paymentResponseRefrence: \"05900948-d867-40ee-8368-ad9441612971\",\n                 paymentResponse: {\n                   paymentReference: \"05900948-d867-40ee-8368-ad9441612971\",\n                   paymentStatus: \"SUCCESS\",\n                   message: \"Payment request successful\"\n                 },\n                 paymentMode: \"WALLET\",\n                 paymentNumber: \"233554340244\",\n                 paymentProvider: \"MTN\",\n                 statusMessage: \"PENDING\",\n                 aggregate: 1,\n                 gopa_accepted_status: 0,\n                 qr_value: \"2e83458d-f4c2-4e75-8861-47f37a5a81aa\",\n                 User_ID: \"4298e2e3-4215-4884-9bb1-3fc7d9695e49\",\n                 gopa_user_id: null,\n                 address_id: \"7ab05e2a-8964-4b40-806b-f5c82eff0900\",\n                 dateGopaAccepted: null\n               }\n             })\n\nArgument `paymentStatus`: Invalid value provided. Expected Int or IntFieldUpdateOperationsInput, provided String."}
{"content_length":"1979","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1366.536,"status":500,"url":"/spdatbaseservice/api/v1/invoice/update"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1870.021,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"13291","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":6197.856,"status":200,"url":"/spdatbaseservice/api/v1/cart/full-user-carts/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"381","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1882.829,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/SERVICE_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"373","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1611.963,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/DELIVERY_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"360","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1795.933,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/TAX"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"1820","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3811.8,"status":200,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"817","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1937.966,"status":200,"url":"/spdatbaseservice/api/v1/invoice/update"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1732.487,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"13291","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":6057.567,"status":200,"url":"/spdatbaseservice/api/v1/cart/full-user-carts/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"381","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1884.704,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/SERVICE_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"373","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1555.822,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/DELIVERY_CHARGE"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"360","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1660.233,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/TAX"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"1820","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3575.851,"status":200,"url":"/spdatbaseservice/api/v1/invoice/add-with-items"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"819","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1559.348,"status":200,"url":"/spdatbaseservice/api/v1/invoice/update"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"234","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1825.643,"status":200,"url":"/spdatbaseservice/api/v1/wallet/details-by-wallet-number/S00001"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"249","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3246.629,"status":200,"url":"/spdatbaseservice/api/v1/cart/add"}
{"content_length":"249","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3249.953,"status":200,"url":"/spdatbaseservice/api/v1/cart/add"}
{"content_length":"249","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3254.253,"status":200,"url":"/spdatbaseservice/api/v1/cart/add"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"334","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3267.183,"status":200,"url":"/spdatbaseservice/api/v1/order-request/update"}
{"content_length":"334","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3260.672,"status":200,"url":"/spdatbaseservice/api/v1/order-request/update"}
{"content_length":"335","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3263.587,"status":200,"url":"/spdatbaseservice/api/v1/order-request/update"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"233","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1595.851,"status":200,"url":"/spdatbaseservice/api/v1/wallet/details-by-wallet-number/S00002"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"51","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":2093.768,"status":200,"url":"/spdatbaseservice/api/v1/transactions/add-many"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"240","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3751.47,"status":200,"url":"/spdatbaseservice/api/v1/wallet/update"}
{"content_length":"240","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":3750.714,"status":200,"url":"/spdatbaseservice/api/v1/wallet/update"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2214.994,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"42","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1956.789,"status":200,"url":"/spdatbaseservice/api/v1/cart/full-user-carts/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"381","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2015.272,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/SERVICE_CHARGE"}
{"label":"Spare Spart api logs","level":"error","message":"Invalid charge ID"}
{"content_length":"42","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2414.665,"status":200,"url":"/spdatbaseservice/api/v1/service-charge/details-by-charge-type/MAIN_AMOUNT"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"402","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2701.177,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"42","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1615.247,"status":200,"url":"/spdatbaseservice/api/v1/cart/full-user-carts/4298e2e3-4215-4884-9bb1-3fc7d9695e49"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"710","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":4524.939,"status":200,"url":"/spdatbaseservice/api/v1/user/login"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"399","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1788.857,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"15019","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":8121.862,"status":200,"url":"/spdatbaseservice/api/v1/invoice/for-gopa-acceptance"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"816","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2490.584,"status":200,"url":"/spdatbaseservice/api/v1/invoice/details/ac3931fe-c323-4ffa-90a3-3a358231fa6d"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"399","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2363.538,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"816","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1663.124,"status":200,"url":"/spdatbaseservice/api/v1/invoice/details/ac3931fe-c323-4ffa-90a3-3a358231fa6d"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"872","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"POST","response_time":1626.452,"status":200,"url":"/spdatbaseservice/api/v1/invoice/update"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"399","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":3384.367,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"399","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1655.441,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"399","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1743.004,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"15430","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":7277.434,"status":200,"url":"/spdatbaseservice/api/v1/invoice/gopa-accepted-invoices/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"399","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2252.386,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"15430","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":7519.784,"status":200,"url":"/spdatbaseservice/api/v1/invoice/gopa-accepted-invoices/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"15428","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":7927.533,"status":200,"url":"/spdatbaseservice/api/v1/invoice/details-by-QR/11ab4f30-9276-4723-b13b-bee0cc8f9521"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"5796","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":5730.819,"status":200,"url":"/spdatbaseservice/api/v1/invoice/item-details-by-QR/6f6a51f4-eb42-4505-8fa9-59e1a37653e0"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"399","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":2047.084,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"15428","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":6665.957,"status":200,"url":"/spdatbaseservice/api/v1/invoice/details-full/ac3931fe-c323-4ffa-90a3-3a358231fa6d"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"399","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1561.45,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"15428","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":6394.175,"status":200,"url":"/spdatbaseservice/api/v1/invoice/details-full/ac3931fe-c323-4ffa-90a3-3a358231fa6d"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"399","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1483.937,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"error","message":"Invalid invoice ID"}
{"content_length":"43","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1502.396,"status":200,"url":"/spdatbaseservice/api/v1/invoice/item-details-full/6f6a51f4-eb42-4505-8fa9-59e1a37653e0"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"399","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":1695.875,"status":200,"url":"/spdatbaseservice/api/v1/user/by-id/b4181aa4-d17d-4577-82e9-8913c94827a3"}
{"label":"Spare Spart api logs","level":"info","message":"Success"}
{"content_length":"5796","label":"Spare Spart api logs","level":"http","message":"incoming-api-request","method":"GET","response_time":5576.115,"status":200,"url":"/spdatbaseservice/api/v1/invoice/item-details-full/91b4d83f-1303-4c86-a186-dd9f0775d37e"}
{"label":"Spare Spart api logs","level":"debug","message":"Spare Part Database Service: Running in development mode and listening on port http://:9006"}
